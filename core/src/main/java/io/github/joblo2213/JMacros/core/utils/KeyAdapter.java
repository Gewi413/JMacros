package io.github.joblo2213.JMacros.core.utils;

import com.github.kwhat.jnativehook.keyboard.NativeKeyEvent;
import javafx.scene.input.KeyCode;

public abstract class KeyAdapter {

    public static final KeyAdapter JNativeHook = new KeyAdapter() {

        @Override
        public int map(KeyCode fx) {
            switch (fx) {
                case ENTER:
                    return NativeKeyEvent.VC_ENTER;
                case BACK_SPACE:
                    return NativeKeyEvent.VC_BACKSPACE;
                case TAB:
                    return NativeKeyEvent.VC_TAB;
                case CANCEL:
                case CLEAR:
                    return NativeKeyEvent.VC_CLEAR;
                case SHIFT:
                    return NativeKeyEvent.VC_SHIFT;
                case CONTROL:
                    return NativeKeyEvent.VC_CONTROL;
                case ALT:
                    return NativeKeyEvent.VC_ALT;
                case PAUSE:
                    return NativeKeyEvent.VC_PAUSE;
                case CAPS:
                    return NativeKeyEvent.VC_CAPS_LOCK;
                case ESCAPE:
                    return NativeKeyEvent.VC_ESCAPE;
                case SPACE:
                    return NativeKeyEvent.VC_SPACE;
                case PAGE_UP:
                    return NativeKeyEvent.VC_PAGE_UP;
                case PAGE_DOWN:
                    return NativeKeyEvent.VC_PAGE_DOWN;
                case END:
                    return NativeKeyEvent.VC_END;
                case HOME:
                    return NativeKeyEvent.VC_HOME;
                case LEFT:
                    return NativeKeyEvent.VC_LEFT;
                case UP:
                    return NativeKeyEvent.VC_UP;
                case RIGHT:
                    return NativeKeyEvent.VC_RIGHT;
                case DOWN:
                    return NativeKeyEvent.VC_DOWN;
                case COMMA:
                    return NativeKeyEvent.VC_COMMA;
                case MINUS:
                    return NativeKeyEvent.VC_MINUS;
                case PERIOD:
                    return NativeKeyEvent.VC_PERIOD;
                case SLASH:
                case DIVIDE:
                    return NativeKeyEvent.VC_SLASH;
                case DIGIT0:
                case NUMPAD0:
                    return NativeKeyEvent.VC_0;
                case DIGIT1:
                case NUMPAD1:
                    return NativeKeyEvent.VC_1;
                case DIGIT2:
                case NUMPAD2:
                    return NativeKeyEvent.VC_2;
                case DIGIT3:
                case NUMPAD3:
                    return NativeKeyEvent.VC_3;
                case DIGIT4:
                case NUMPAD4:
                    return NativeKeyEvent.VC_4;
                case DIGIT5:
                case NUMPAD5:
                    return NativeKeyEvent.VC_5;
                case DIGIT6:
                case NUMPAD6:
                    return NativeKeyEvent.VC_6;
                case DIGIT7:
                case NUMPAD7:
                    return NativeKeyEvent.VC_7;
                case DIGIT8:
                case NUMPAD8:
                    return NativeKeyEvent.VC_8;
                case DIGIT9:
                case NUMPAD9:
                    return NativeKeyEvent.VC_9;
                case SEMICOLON:
                    return NativeKeyEvent.VC_SEMICOLON;
                case EQUALS:
                    return NativeKeyEvent.VC_EQUALS;
                case A:
                    return NativeKeyEvent.VC_A;
                case B:
                    return NativeKeyEvent.VC_B;
                case C:
                    return NativeKeyEvent.VC_C;
                case D:
                    return NativeKeyEvent.VC_D;
                case E:
                    return NativeKeyEvent.VC_E;
                case F:
                    return NativeKeyEvent.VC_F;
                case G:
                    return NativeKeyEvent.VC_G;
                case H:
                    return NativeKeyEvent.VC_H;
                case I:
                    return NativeKeyEvent.VC_I;
                case J:
                    return NativeKeyEvent.VC_J;
                case K:
                    return NativeKeyEvent.VC_K;
                case L:
                    return NativeKeyEvent.VC_L;
                case M:
                    return NativeKeyEvent.VC_M;
                case N:
                    return NativeKeyEvent.VC_N;
                case O:
                    return NativeKeyEvent.VC_O;
                case P:
                    return NativeKeyEvent.VC_P;
                case Q:
                    return NativeKeyEvent.VC_Q;
                case R:
                    return NativeKeyEvent.VC_R;
                case S:
                    return NativeKeyEvent.VC_S;
                case T:
                    return NativeKeyEvent.VC_T;
                case U:
                    return NativeKeyEvent.VC_U;
                case V:
                    return NativeKeyEvent.VC_V;
                case W:
                    return NativeKeyEvent.VC_W;
                case X:
                    return NativeKeyEvent.VC_X;
                case Y:
                    return NativeKeyEvent.VC_Y;
                case Z:
                    return NativeKeyEvent.VC_Z;
                case OPEN_BRACKET:
                    return NativeKeyEvent.VC_OPEN_BRACKET;
                case BACK_SLASH:
                    return NativeKeyEvent.VC_BACK_SLASH;
                case CLOSE_BRACKET:
                    return NativeKeyEvent.VC_CLOSE_BRACKET;
                case MULTIPLY:
                case PRINTSCREEN:
                    return NativeKeyEvent.VC_PRINTSCREEN;
                case SEPARATOR:
                    return NativeKeyEvent.VC_UNDEFINED;
                case DECIMAL:
                    return NativeKeyEvent.VC_SEPARATOR;
                case DELETE:
                    return NativeKeyEvent.VC_DELETE;
                case NUM_LOCK:
                    return NativeKeyEvent.VC_NUM_LOCK;
                case SCROLL_LOCK:
                    return NativeKeyEvent.VC_SCROLL_LOCK;
                case F1:
                    return NativeKeyEvent.VC_F1;
                case F2:
                    return NativeKeyEvent.VC_F2;
                case F3:
                    return NativeKeyEvent.VC_F3;
                case F4:
                    return NativeKeyEvent.VC_F4;
                case F5:
                    return NativeKeyEvent.VC_F5;
                case F6:
                    return NativeKeyEvent.VC_F6;
                case F7:
                    return NativeKeyEvent.VC_F7;
                case F8:
                    return NativeKeyEvent.VC_F8;
                case F9:
                    return NativeKeyEvent.VC_F9;
                case F10:
                    return NativeKeyEvent.VC_F10;
                case F11:
                    return NativeKeyEvent.VC_F11;
                case F12:
                    return NativeKeyEvent.VC_F12;
                case INSERT:
                    return NativeKeyEvent.VC_INSERT;
                case BACK_QUOTE:
                    return NativeKeyEvent.VC_BACKQUOTE;
                case QUOTE:
                    return NativeKeyEvent.VC_QUOTE;
                case WINDOWS:
                    return NativeKeyEvent.VC_META;
                case CONTEXT_MENU:
                    return NativeKeyEvent.VC_CONTEXT_MENU;
            }
            return NativeKeyEvent.VC_UNDEFINED;
        }

        @Override
        public KeyCode map(int code) {
            switch (code) {
                case NativeKeyEvent.VC_ENTER:
                    return KeyCode.ENTER;
                case NativeKeyEvent.VC_BACKSPACE:
                    return KeyCode.BACK_SPACE;
                case NativeKeyEvent.VC_TAB:
                    return KeyCode.TAB;
                case NativeKeyEvent.VC_CLEAR:
                    return KeyCode.CLEAR;
                case NativeKeyEvent.VC_SHIFT:
                    return KeyCode.SHIFT;
                case NativeKeyEvent.VC_CONTROL:
                    return KeyCode.CONTROL;
                case NativeKeyEvent.VC_ALT:
                    return KeyCode.ALT;
                case NativeKeyEvent.VC_PAUSE:
                    return KeyCode.PAUSE;
                case NativeKeyEvent.VC_CAPS_LOCK:
                    return KeyCode.CAPS;
                case NativeKeyEvent.VC_ESCAPE:
                    return KeyCode.ESCAPE;
                case NativeKeyEvent.VC_SPACE:
                    return KeyCode.SPACE;
                case NativeKeyEvent.VC_PAGE_UP:
                    return KeyCode.PAGE_UP;
                case NativeKeyEvent.VC_PAGE_DOWN:
                    return KeyCode.PAGE_DOWN;
                case NativeKeyEvent.VC_END:
                    return KeyCode.END;
                case NativeKeyEvent.VC_HOME:
                    return KeyCode.HOME;
                case NativeKeyEvent.VC_LEFT:
                    return KeyCode.LEFT;
                case NativeKeyEvent.VC_UP:
                    return KeyCode.UP;
                case NativeKeyEvent.VC_RIGHT:
                    return KeyCode.RIGHT;
                case NativeKeyEvent.VC_DOWN:
                    return KeyCode.DOWN;
                case NativeKeyEvent.VC_COMMA:
                    return KeyCode.COMMA;
                case NativeKeyEvent.VC_MINUS:
                    return KeyCode.MINUS;
                case NativeKeyEvent.VC_PERIOD:
                    return KeyCode.PERIOD;
                case NativeKeyEvent.VC_SLASH:
                    return KeyCode.SLASH;
                case NativeKeyEvent.VC_0:
                    return KeyCode.DIGIT0;
                case NativeKeyEvent.VC_1:
                    return KeyCode.DIGIT1;
                case NativeKeyEvent.VC_2:
                    return KeyCode.DIGIT2;
                case NativeKeyEvent.VC_3:
                    return KeyCode.DIGIT3;
                case NativeKeyEvent.VC_4:
                    return KeyCode.DIGIT4;
                case NativeKeyEvent.VC_5:
                    return KeyCode.DIGIT5;
                case NativeKeyEvent.VC_6:
                    return KeyCode.DIGIT6;
                case NativeKeyEvent.VC_7:
                    return KeyCode.DIGIT7;
                case NativeKeyEvent.VC_8:
                    return KeyCode.DIGIT8;
                case NativeKeyEvent.VC_9:
                    return KeyCode.DIGIT9;
                case NativeKeyEvent.VC_SEMICOLON:
                    return KeyCode.SEMICOLON;
                case NativeKeyEvent.VC_EQUALS:
                    return KeyCode.EQUALS;
                case NativeKeyEvent.VC_A:
                    return KeyCode.A;
                case NativeKeyEvent.VC_B:
                    return KeyCode.B;
                case NativeKeyEvent.VC_C:
                    return KeyCode.C;
                case NativeKeyEvent.VC_D:
                    return KeyCode.D;
                case NativeKeyEvent.VC_E:
                    return KeyCode.E;
                case NativeKeyEvent.VC_F:
                    return KeyCode.F;
                case NativeKeyEvent.VC_G:
                    return KeyCode.G;
                case NativeKeyEvent.VC_H:
                    return KeyCode.H;
                case NativeKeyEvent.VC_I:
                    return KeyCode.I;
                case NativeKeyEvent.VC_J:
                    return KeyCode.J;
                case NativeKeyEvent.VC_K:
                    return KeyCode.K;
                case NativeKeyEvent.VC_L:
                    return KeyCode.L;
                case NativeKeyEvent.VC_M:
                    return KeyCode.M;
                case NativeKeyEvent.VC_N:
                    return KeyCode.N;
                case NativeKeyEvent.VC_O:
                    return KeyCode.O;
                case NativeKeyEvent.VC_P:
                    return KeyCode.P;
                case NativeKeyEvent.VC_Q:
                    return KeyCode.Q;
                case NativeKeyEvent.VC_R:
                    return KeyCode.R;
                case NativeKeyEvent.VC_S:
                    return KeyCode.S;
                case NativeKeyEvent.VC_T:
                    return KeyCode.T;
                case NativeKeyEvent.VC_U:
                    return KeyCode.U;
                case NativeKeyEvent.VC_V:
                    return KeyCode.V;
                case NativeKeyEvent.VC_W:
                    return KeyCode.W;
                case NativeKeyEvent.VC_X:
                    return KeyCode.X;
                case NativeKeyEvent.VC_Y:
                    return KeyCode.Y;
                case NativeKeyEvent.VC_Z:
                    return KeyCode.Z;
                case NativeKeyEvent.VC_OPEN_BRACKET:
                    return KeyCode.OPEN_BRACKET;
                case NativeKeyEvent.VC_BACK_SLASH:
                    return KeyCode.BACK_SLASH;
                case NativeKeyEvent.VC_CLOSE_BRACKET:
                    return KeyCode.CLOSE_BRACKET;
                case NativeKeyEvent.VC_SEPARATOR:
                    return KeyCode.DECIMAL;
                case NativeKeyEvent.VC_DELETE:
                    return KeyCode.DELETE;
                case NativeKeyEvent.VC_NUM_LOCK:
                    return KeyCode.NUM_LOCK;
                case NativeKeyEvent.VC_SCROLL_LOCK:
                    return KeyCode.SCROLL_LOCK;
                case NativeKeyEvent.VC_F1:
                    return KeyCode.F1;
                case NativeKeyEvent.VC_F2:
                    return KeyCode.F2;
                case NativeKeyEvent.VC_F3:
                    return KeyCode.F3;
                case NativeKeyEvent.VC_F4:
                    return KeyCode.F4;
                case NativeKeyEvent.VC_F5:
                    return KeyCode.F5;
                case NativeKeyEvent.VC_F6:
                    return KeyCode.F6;
                case NativeKeyEvent.VC_F7:
                    return KeyCode.F7;
                case NativeKeyEvent.VC_F8:
                    return KeyCode.F8;
                case NativeKeyEvent.VC_F9:
                    return KeyCode.F9;
                case NativeKeyEvent.VC_F10:
                    return KeyCode.F10;
                case NativeKeyEvent.VC_F11:
                    return KeyCode.F11;
                case NativeKeyEvent.VC_F12:
                    return KeyCode.F12;
                case NativeKeyEvent.VC_PRINTSCREEN:
                    return KeyCode.PRINTSCREEN;
                case NativeKeyEvent.VC_INSERT:
                    return KeyCode.INSERT;
                case NativeKeyEvent.VC_BACKQUOTE:
                    return KeyCode.BACK_QUOTE;
                case NativeKeyEvent.VC_QUOTE:
                    return KeyCode.QUOTE;
                case NativeKeyEvent.VC_META:
                    return KeyCode.WINDOWS;
                case NativeKeyEvent.VC_CONTEXT_MENU:
                    return KeyCode.CONTEXT_MENU;
            }
            return KeyCode.UNDEFINED;
        }
    };

    public abstract int map(KeyCode fx);

    public abstract KeyCode map(int code);
}
